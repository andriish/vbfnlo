      REAL*8 FUNCTION MatrixuguggH2(PBAR,NHEL,fsign)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u g -> u g g h  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  84,NEIGEN=  6) 
#include "genps.inc"
#include "ggfloMG.inc" 
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS= 109, NCOLOR=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
c$$$      REAL*8 P(0:3,NEXTERNAL)
      REAL*8 PBAR(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL),fsign(NEXTERNAL) !IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J,mu,nr
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
c$$$      common/to_amps/  amp2,       jamp2
c$$$      include "coupl.inc"
#include "VBFNLO/utilities/coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            9/                                       
      DATA (CF(i,1  ),i=1  ,6  ) /    64,    1,   -8,   -8,    1,   10/    
C               T[ 3, 1, 2, 4, 5]                                          
      DATA Denom(2  )/            9/                                       
      DATA (CF(i,2  ),i=1  ,6  ) /     1,   64,   -8,   10,    1,   -8/    
C               T[ 3, 1, 5, 2, 4]                                          
      DATA Denom(3  )/            9/                                       
      DATA (CF(i,3  ),i=1  ,6  ) /    -8,   -8,   64,    1,   10,    1/    
C               T[ 3, 1, 2, 5, 4]                                          
      DATA Denom(4  )/            9/                                       
      DATA (CF(i,4  ),i=1  ,6  ) /    -8,   10,    1,   64,   -8,    1/    
C               T[ 3, 1, 4, 2, 5]                                          
      DATA Denom(5  )/            9/                                       
      DATA (CF(i,5  ),i=1  ,6  ) /     1,    1,   10,   -8,   64,   -8/    
C               T[ 3, 1, 4, 5, 2]                                          
      DATA Denom(6  )/            9/                                       
      DATA (CF(i,6  ),i=1  ,6  ) /    10,   -8,    1,    1,   -8,   64/    
C               T[ 3, 1, 5, 4, 2]                                          

c      LOGICAL lgauge2
c      lgauge2=.true.
c      lgauge2=.false.

C ----------
C BEGIN CODE
C ----------

cc start check
      print*,''
      print*,'---------- in MatrixuguggH2 ----------'
c$$$      print*,'PBAR(mu,1)',(PBAR(mu,1),mu=0,3)
c$$$      print*,'PBAR(mu,2)',(PBAR(mu,2),mu=0,3)
c$$$      print*,'PBAR(mu,3)',(PBAR(mu,3),mu=0,3)
c$$$      print*,'PBAR(mu,4)',(PBAR(mu,4),mu=0,3)
c$$$      print*,'PBAR(mu,5)',(PBAR(mu,5),mu=0,3)
c$$$      print*,'PBAR(mu,6)',(PBAR(mu,6),mu=0,3)
      print*,'NHEL',NHEL 
      print*,'fsign',fsign
      print*,''
cc end check 
      CALL IXXXXX(PBAR(0,1),ZERO ,NHEL(1)*FSIGN(1),FSIGN(1),W(1,1)) !u   
      CALL VXXXXX(PBAR(0,2),ZERO ,NHEL(2)*FSIGN(2),FSIGN(2),W(1,2)) !g
      CALL OXXXXX(PBAR(0,3),ZERO ,NHEL(3)*FSIGN(3),FSIGN(3),W(1,3)) !u     
cc start check
      if(lgauge2) then
         do i=1,4
            W(i,2)=-PBAR(i-1,2)/PBAR(0,2)
         enddo
      endif
c      print*,' '
c      print*, "polarization mad"
c      print*, ("W(1,2)",W(i,2), i=1,18)
c      print*,'PBAR(mu,2)',(PBAR(mu,2),mu=0,3)
c      print*,' '
cc end check 


      CALL VXXXXX(PBAR(0,4),ZERO ,NHEL(4)*FSIGN(4),FSIGN(4),W(1,4)) !g       
      CALL VXXXXX(PBAR(0,5),ZERO ,NHEL(5)*FSIGN(5),FSIGN(5),W(1,5)) !g       
      CALL SXXXXX(PBAR(0,6),FSIGN(6),W(1,6 ))                       !H    
      CALL FVIXXX(W(1,1   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL FVIXXX(W(1,7   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL JIOXXX(W(1,8   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL VVSHXX(W(1,2   ),W(1,9   ),W(1,6   ),GH ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL JIOXXX(W(1,7   ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,11  ))     
      CALL VVSHXX(W(1,4   ),W(1,11  ),W(1,6   ),GH ,AMP(2   ))             
      CALL FVOXXX(W(1,10  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL JIOXXX(W(1,1   ),W(1,12  ),GG ,ZERO    ,ZERO    ,W(1,13  ))     
      CALL VVSHXX(W(1,5   ),W(1,13  ),W(1,6   ),GH ,AMP(3   ))             
      CALL FVIXXX(W(1,1   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,14  ))     
      CALL JIOXXX(W(1,14  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL JVVXXX(W(1,5   ),W(1,15  ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL VVSHXX(W(1,2   ),W(1,16  ),W(1,6   ),GH ,AMP(4   ))             
      CALL JVVXXX(W(1,5   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,17  ))      
      CALL FVOXXX(W(1,3   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL JIOXXX(W(1,1   ),W(1,18  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL VVSHXX(W(1,4   ),W(1,19  ),W(1,6   ),GH ,AMP(5   ))             
      CALL JVVXXX(W(1,15  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,20  ))      
      CALL VVSHXX(W(1,5   ),W(1,20  ),W(1,6   ),GH ,AMP(6   ))             
      CALL VVVSXX(W(1,5   ),W(1,2   ),W(1,15  ),W(1,6   ),G ,GH ,          
     &     AMP(7   ))                                                      
      CALL VVSHXX(W(1,15  ),W(1,17  ),W(1,6   ),GH ,AMP(8   ))             
      CALL FVOXXX(W(1,3   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL JIOXXX(W(1,14  ),W(1,21  ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL VVSHXX(W(1,2   ),W(1,22  ),W(1,6   ),GH ,AMP(9   ))             
      CALL FVOXXX(W(1,21  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL JIOXXX(W(1,1   ),W(1,23  ),GG ,ZERO    ,ZERO    ,W(1,24  ))     
      CALL VVSHXX(W(1,4   ),W(1,24  ),W(1,6   ),GH ,AMP(10  ))             
      CALL FVIXXX(W(1,14  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,25  ))     
      CALL JIOXXX(W(1,25  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,26  ))     
      CALL VVSHXX(W(1,5   ),W(1,26  ),W(1,6   ),GH ,AMP(11  ))             
      CALL JVVXXX(W(1,5   ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,27  ))      
      CALL FVIXXX(W(1,1   ),W(1,27  ),GG ,ZERO    ,ZERO    ,W(1,28  ))     
      CALL JIOXXX(W(1,28  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,29  ))     
      CALL VVSHXX(W(1,2   ),W(1,29  ),W(1,6   ),GH ,AMP(12  ))             
      CALL JIOXXX(W(1,1   ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,30  ))     
      CALL JVVXXX(W(1,5   ),W(1,30  ),G ,ZERO    ,ZERO    ,W(1,31  ))      
      CALL VVSHXX(W(1,4   ),W(1,31  ),W(1,6   ),GH ,AMP(13  ))             
      CALL JVVXXX(W(1,30  ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,32  ))      
      CALL VVSHXX(W(1,5   ),W(1,32  ),W(1,6   ),GH ,AMP(14  ))             
      CALL VVVSXX(W(1,5   ),W(1,4   ),W(1,30  ),W(1,6   ),G ,GH ,          
     &     AMP(15  ))                                                      
      CALL VVSHXX(W(1,30  ),W(1,27  ),W(1,6   ),GH ,AMP(16  ))             
      CALL FVIXXX(W(1,14  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,33  ))     
      CALL JIOXXX(W(1,33  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,34  ))     
      CALL VVSHXX(W(1,2   ),W(1,34  ),W(1,6   ),GH ,AMP(17  ))             
      CALL FVOXXX(W(1,10  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,35  ))     
      CALL JIOXXX(W(1,1   ),W(1,35  ),GG ,ZERO    ,ZERO    ,W(1,36  ))     
      CALL VVSHXX(W(1,4   ),W(1,36  ),W(1,6   ),GH ,AMP(18  ))             
      CALL JIOXXX(W(1,14  ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,37  ))     
      CALL VVSHXX(W(1,5   ),W(1,37  ),W(1,6   ),GH ,AMP(19  ))             
      CALL JIOXXX(W(1,7   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,38  ))     
      CALL JVVXXX(W(1,4   ),W(1,38  ),G ,ZERO    ,ZERO    ,W(1,39  ))      
      CALL VVSHXX(W(1,2   ),W(1,39  ),W(1,6   ),GH ,AMP(20  ))             
      CALL JVVXXX(W(1,38  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,40  ))      
      CALL VVSHXX(W(1,4   ),W(1,40  ),W(1,6   ),GH ,AMP(21  ))             
      CALL JVVXXX(W(1,4   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,41  ))      
      CALL FVOXXX(W(1,3   ),W(1,41  ),GG ,ZERO    ,ZERO    ,W(1,42  ))     
      CALL JIOXXX(W(1,1   ),W(1,42  ),GG ,ZERO    ,ZERO    ,W(1,43  ))     
      CALL VVSHXX(W(1,5   ),W(1,43  ),W(1,6   ),GH ,AMP(22  ))             
      CALL VVVSXX(W(1,4   ),W(1,2   ),W(1,38  ),W(1,6   ),G ,GH ,          
     &     AMP(23  ))                                                      
      CALL VVSHXX(W(1,38  ),W(1,41  ),W(1,6   ),GH ,AMP(24  ))             
      CALL JIOXXX(W(1,1   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,44  ))     
      CALL JVVXXX(W(1,4   ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,45  ))      
      CALL JVVXXX(W(1,5   ),W(1,45  ),G ,ZERO    ,ZERO    ,W(1,46  ))      
      CALL VVSHXX(W(1,2   ),W(1,46  ),W(1,6   ),GH ,AMP(25  ))             
      CALL UVVAXX(W(1,4   ),W(1,44  ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,47  ))                                                      
      CALL JVTAXX(W(1,5   ),W(1,47  ),G ,ZERO    ,ZERO    ,W(1,48  ))      
      CALL VVSHXX(W(1,2   ),W(1,48  ),W(1,6   ),GH ,AMP(26  ))             
      CALL JVVXXX(W(1,44  ),W(1,17  ),G ,ZERO    ,ZERO    ,W(1,49  ))      
      CALL VVSHXX(W(1,4   ),W(1,49  ),W(1,6   ),GH ,AMP(27  ))             
      CALL UVVAXX(W(1,5   ),W(1,2   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,50  ))                                                      
      CALL JVTAXX(W(1,44  ),W(1,50  ),G ,ZERO    ,ZERO    ,W(1,51  ))      
      CALL VVSHXX(W(1,4   ),W(1,51  ),W(1,6   ),GH ,AMP(28  ))             
      CALL JVVXXX(W(1,45  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,52  ))      
      CALL VVSHXX(W(1,5   ),W(1,52  ),W(1,6   ),GH ,AMP(29  ))             
      CALL JVTAXX(W(1,2   ),W(1,47  ),G ,ZERO    ,ZERO    ,W(1,53  ))      
      CALL VVSHXX(W(1,5   ),W(1,53  ),W(1,6   ),GH ,AMP(30  ))             
      CALL VVVSXX(W(1,4   ),W(1,17  ),W(1,44  ),W(1,6   ),G ,GH ,          
     &     AMP(31  ))                                                      
      CALL VVVSXX(W(1,5   ),W(1,2   ),W(1,45  ),W(1,6   ),G ,GH ,          
     &     AMP(32  ))                                                      
      CALL JVVXXX(W(1,4   ),W(1,17  ),G ,ZERO    ,ZERO    ,W(1,54  ))      
      CALL VVSHXX(W(1,44  ),W(1,54  ),W(1,6   ),GH ,AMP(33  ))             
      CALL JVTAXX(W(1,4   ),W(1,50  ),G ,ZERO    ,ZERO    ,W(1,55  ))      
      CALL VVSHXX(W(1,44  ),W(1,55  ),W(1,6   ),GH ,AMP(34  ))             
      CALL VVSHXX(W(1,45  ),W(1,17  ),W(1,6   ),GH ,AMP(35  ))             
      CALL TTSAXX(W(1,47  ),W(1,50  ),W(1,6   ),GH ,AMP(36  ))             
      CALL JIOXXX(W(1,1   ),W(1,21  ),GG ,ZERO    ,ZERO    ,W(1,56  ))     
      CALL JVVXXX(W(1,4   ),W(1,56  ),G ,ZERO    ,ZERO    ,W(1,57  ))      
      CALL VVSHXX(W(1,2   ),W(1,57  ),W(1,6   ),GH ,AMP(37  ))             
      CALL JVVXXX(W(1,56  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,58  ))      
      CALL VVSHXX(W(1,4   ),W(1,58  ),W(1,6   ),GH ,AMP(38  ))             
      CALL FVIXXX(W(1,1   ),W(1,41  ),GG ,ZERO    ,ZERO    ,W(1,59  ))     
      CALL JIOXXX(W(1,59  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,60  ))     
      CALL VVSHXX(W(1,5   ),W(1,60  ),W(1,6   ),GH ,AMP(39  ))             
      CALL VVVSXX(W(1,4   ),W(1,2   ),W(1,56  ),W(1,6   ),G ,GH ,          
     &     AMP(40  ))                                                      
      CALL VVSHXX(W(1,56  ),W(1,41  ),W(1,6   ),GH ,AMP(41  ))             
      CALL JVVXXX(W(1,27  ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,61  ))      
      CALL VVSHXX(W(1,2   ),W(1,61  ),W(1,6   ),GH ,AMP(42  ))             
      CALL UVVAXX(W(1,5   ),W(1,4   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,62  ))                                                      
      CALL JVTAXX(W(1,44  ),W(1,62  ),G ,ZERO    ,ZERO    ,W(1,63  ))      
      CALL VVSHXX(W(1,2   ),W(1,63  ),W(1,6   ),GH ,AMP(43  ))             
      CALL JVVXXX(W(1,44  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,64  ))      
      CALL JVVXXX(W(1,5   ),W(1,64  ),G ,ZERO    ,ZERO    ,W(1,65  ))      
      CALL VVSHXX(W(1,4   ),W(1,65  ),W(1,6   ),GH ,AMP(44  ))             
      CALL UVVAXX(W(1,44  ),W(1,2   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,66  ))                                                      
      CALL JVTAXX(W(1,5   ),W(1,66  ),G ,ZERO    ,ZERO    ,W(1,67  ))      
      CALL VVSHXX(W(1,4   ),W(1,67  ),W(1,6   ),GH ,AMP(45  ))             
      CALL JVVXXX(W(1,64  ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,68  ))      
      CALL VVSHXX(W(1,5   ),W(1,68  ),W(1,6   ),GH ,AMP(46  ))             
      CALL JVTAXX(W(1,4   ),W(1,66  ),G ,ZERO    ,ZERO    ,W(1,69  ))      
      CALL VVSHXX(W(1,5   ),W(1,69  ),W(1,6   ),GH ,AMP(47  ))             
      CALL VVVSXX(W(1,27  ),W(1,2   ),W(1,44  ),W(1,6   ),G ,GH ,          
     &     AMP(48  ))                                                      
      CALL VVVSXX(W(1,5   ),W(1,4   ),W(1,64  ),W(1,6   ),G ,GH ,          
     &     AMP(49  ))                                                      
      CALL JVVXXX(W(1,27  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,70  ))      
      CALL VVSHXX(W(1,44  ),W(1,70  ),W(1,6   ),GH ,AMP(50  ))             
      CALL JVTAXX(W(1,2   ),W(1,62  ),G ,ZERO    ,ZERO    ,W(1,71  ))      
      CALL VVSHXX(W(1,44  ),W(1,71  ),W(1,6   ),GH ,AMP(51  ))             
      CALL VVSHXX(W(1,64  ),W(1,27  ),W(1,6   ),GH ,AMP(52  ))             
      CALL TTSAXX(W(1,66  ),W(1,62  ),W(1,6   ),GH ,AMP(53  ))             
      CALL JVVXXX(W(1,5   ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,72  ))      
      CALL JVVXXX(W(1,4   ),W(1,72  ),G ,ZERO    ,ZERO    ,W(1,73  ))      
      CALL VVSHXX(W(1,2   ),W(1,73  ),W(1,6   ),GH ,AMP(54  ))             
      CALL UVVAXX(W(1,5   ),W(1,44  ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,74  ))                                                      
      CALL JVTAXX(W(1,4   ),W(1,74  ),G ,ZERO    ,ZERO    ,W(1,75  ))      
      CALL VVSHXX(W(1,2   ),W(1,75  ),W(1,6   ),GH ,AMP(55  ))             
      CALL JVVXXX(W(1,72  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,76  ))      
      CALL VVSHXX(W(1,4   ),W(1,76  ),W(1,6   ),GH ,AMP(56  ))             
      CALL JVTAXX(W(1,2   ),W(1,74  ),G ,ZERO    ,ZERO    ,W(1,77  ))      
      CALL VVSHXX(W(1,4   ),W(1,77  ),W(1,6   ),GH ,AMP(57  ))             
      CALL JVVXXX(W(1,41  ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,78  ))      
      CALL VVSHXX(W(1,5   ),W(1,78  ),W(1,6   ),GH ,AMP(58  ))             
      CALL UVVAXX(W(1,4   ),W(1,2   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,79  ))                                                      
      CALL JVTAXX(W(1,44  ),W(1,79  ),G ,ZERO    ,ZERO    ,W(1,80  ))      
      CALL VVSHXX(W(1,5   ),W(1,80  ),W(1,6   ),GH ,AMP(59  ))             
      CALL VVVSXX(W(1,4   ),W(1,2   ),W(1,72  ),W(1,6   ),G ,GH ,          
     &     AMP(60  ))                                                      
      CALL VVVSXX(W(1,5   ),W(1,44  ),W(1,41  ),W(1,6   ),G ,GH ,          
     &     AMP(61  ))                                                      
      CALL JVVXXX(W(1,5   ),W(1,41  ),G ,ZERO    ,ZERO    ,W(1,81  ))      
      CALL VVSHXX(W(1,44  ),W(1,81  ),W(1,6   ),GH ,AMP(62  ))             
      CALL JVTAXX(W(1,5   ),W(1,79  ),G ,ZERO    ,ZERO    ,W(1,82  ))      
      CALL VVSHXX(W(1,44  ),W(1,82  ),W(1,6   ),GH ,AMP(63  ))             
      CALL VVSHXX(W(1,41  ),W(1,72  ),W(1,6   ),GH ,AMP(64  ))             
      CALL TTSAXX(W(1,79  ),W(1,74  ),W(1,6   ),GH ,AMP(65  ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,83  ))     
      CALL JIOXXX(W(1,7   ),W(1,83  ),GG ,ZERO    ,ZERO    ,W(1,84  ))     
      CALL VVSHXX(W(1,2   ),W(1,84  ),W(1,6   ),GH ,AMP(66  ))             
      CALL FVIXXX(W(1,7   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,85  ))     
      CALL JIOXXX(W(1,85  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,86  ))     
      CALL VVSHXX(W(1,4   ),W(1,86  ),W(1,6   ),GH ,AMP(67  ))             
      CALL FVOXXX(W(1,83  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,87  ))     
      CALL JIOXXX(W(1,1   ),W(1,87  ),GG ,ZERO    ,ZERO    ,W(1,88  ))     
      CALL VVSHXX(W(1,5   ),W(1,88  ),W(1,6   ),GH ,AMP(68  ))             
      CALL JIOXXX(W(1,1   ),W(1,83  ),GG ,ZERO    ,ZERO    ,W(1,89  ))     
      CALL JVVXXX(W(1,5   ),W(1,89  ),G ,ZERO    ,ZERO    ,W(1,90  ))      
      CALL VVSHXX(W(1,2   ),W(1,90  ),W(1,6   ),GH ,AMP(69  ))             
      CALL FVIXXX(W(1,1   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,91  ))     
      CALL JIOXXX(W(1,91  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,92  ))     
      CALL VVSHXX(W(1,4   ),W(1,92  ),W(1,6   ),GH ,AMP(70  ))             
      CALL JVVXXX(W(1,89  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,93  ))      
      CALL VVSHXX(W(1,5   ),W(1,93  ),W(1,6   ),GH ,AMP(71  ))             
      CALL VVVSXX(W(1,5   ),W(1,2   ),W(1,89  ),W(1,6   ),G ,GH ,          
     &     AMP(72  ))                                                      
      CALL VVSHXX(W(1,89  ),W(1,17  ),W(1,6   ),GH ,AMP(73  ))             
      CALL FVOXXX(W(1,21  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,94  ))     
      CALL JIOXXX(W(1,1   ),W(1,94  ),GG ,ZERO    ,ZERO    ,W(1,95  ))     
      CALL VVSHXX(W(1,2   ),W(1,95  ),W(1,6   ),GH ,AMP(74  ))             
      CALL FVIXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,96  ))     
      CALL JIOXXX(W(1,96  ),W(1,21  ),GG ,ZERO    ,ZERO    ,W(1,97  ))     
      CALL VVSHXX(W(1,4   ),W(1,97  ),W(1,6   ),GH ,AMP(75  ))             
      CALL FVIXXX(W(1,96  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,98  ))     
      CALL JIOXXX(W(1,98  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,99  ))     
      CALL VVSHXX(W(1,5   ),W(1,99  ),W(1,6   ),GH ,AMP(76  ))             
      CALL FVOXXX(W(1,3   ),W(1,27  ),GG ,ZERO    ,ZERO    ,W(1,100 ))     
      CALL JIOXXX(W(1,1   ),W(1,100 ),GG ,ZERO    ,ZERO    ,W(1,101 ))     
      CALL VVSHXX(W(1,2   ),W(1,101 ),W(1,6   ),GH ,AMP(77  ))             
      CALL JIOXXX(W(1,96  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,102 ))     
      CALL JVVXXX(W(1,5   ),W(1,102 ),G ,ZERO    ,ZERO    ,W(1,103 ))      
      CALL VVSHXX(W(1,4   ),W(1,103 ),W(1,6   ),GH ,AMP(78  ))             
      CALL JVVXXX(W(1,102 ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,104 ))      
      CALL VVSHXX(W(1,5   ),W(1,104 ),W(1,6   ),GH ,AMP(79  ))             
      CALL VVVSXX(W(1,5   ),W(1,4   ),W(1,102 ),W(1,6   ),G ,GH ,          
     &     AMP(80  ))                                                      
      CALL VVSHXX(W(1,102 ),W(1,27  ),W(1,6   ),GH ,AMP(81  ))             
      CALL FVOXXX(W(1,83  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,105 ))     
      CALL JIOXXX(W(1,1   ),W(1,105 ),GG ,ZERO    ,ZERO    ,W(1,106 ))     
      CALL VVSHXX(W(1,2   ),W(1,106 ),W(1,6   ),GH ,AMP(82  ))             
      CALL FVIXXX(W(1,96  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,107 ))     
      CALL JIOXXX(W(1,107 ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,108 ))     
      CALL VVSHXX(W(1,4   ),W(1,108 ),W(1,6   ),GH ,AMP(83  ))             
      CALL JIOXXX(W(1,96  ),W(1,83  ),GG ,ZERO    ,ZERO    ,W(1,109 ))     
      CALL VVSHXX(W(1,5   ),W(1,109 ),W(1,6   ),GH ,AMP(84  ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)+AMP(   3)-AMP(  12)+AMP(  13)
     &             +AMP(  14)-AMP(  15)-AMP(  16)+AMP(  20)+AMP(  21)
     &             -AMP(  22)-AMP(  23)-AMP(  24)-AMP(  42)+AMP(  43)
     &             +AMP(  44)+AMP(  45)+AMP(  46)-AMP(  47)+AMP(  48)
     &             -AMP(  49)+AMP(  50)-AMP(  51)-AMP(  52)-AMP(  53)
     &             +AMP(  54)+AMP(  55)+AMP(  56)-AMP(  57)+AMP(  58)
     &             -AMP(  59)-AMP(  60)-AMP(  61)+AMP(  62)+AMP(  63)
     &             -AMP(  64)-AMP(  65)
      JAMP(   2) = -AMP(   4)+AMP(   5)-AMP(   6)+AMP(   7)+AMP(   8)
     &             +AMP(   9)+AMP(  10)+AMP(  11)-AMP(  25)-AMP(  26)
     &             +AMP(  27)+AMP(  28)-AMP(  29)+AMP(  30)-AMP(  31)
     &             +AMP(  32)-AMP(  33)-AMP(  34)+AMP(  35)+AMP(  36)
     &             +AMP(  37)+AMP(  38)-AMP(  39)-AMP(  40)-AMP(  41)
     &             -AMP(  54)-AMP(  55)-AMP(  56)+AMP(  57)-AMP(  58)
     &             +AMP(  59)+AMP(  60)+AMP(  61)-AMP(  62)-AMP(  63)
     &             +AMP(  64)+AMP(  65)
      JAMP(   3) = +AMP(   4)-AMP(   5)+AMP(   6)-AMP(   7)-AMP(   8)
     &             +AMP(  12)-AMP(  13)-AMP(  14)+AMP(  15)+AMP(  16)
     &             +AMP(  17)+AMP(  18)+AMP(  19)+AMP(  25)+AMP(  26)
     &             -AMP(  27)-AMP(  28)+AMP(  29)-AMP(  30)+AMP(  31)
     &             -AMP(  32)+AMP(  33)+AMP(  34)-AMP(  35)-AMP(  36)
     &             +AMP(  42)-AMP(  43)-AMP(  44)-AMP(  45)-AMP(  46)
     &             +AMP(  47)-AMP(  48)+AMP(  49)-AMP(  50)+AMP(  51)
     &             +AMP(  52)+AMP(  53)
      JAMP(   4) = -AMP(  20)-AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)
     &             -AMP(  25)-AMP(  26)+AMP(  27)+AMP(  28)-AMP(  29)
     &             +AMP(  30)-AMP(  31)+AMP(  32)-AMP(  33)-AMP(  34)
     &             +AMP(  35)+AMP(  36)-AMP(  54)-AMP(  55)-AMP(  56)
     &             +AMP(  57)-AMP(  58)+AMP(  59)+AMP(  60)+AMP(  61)
     &             -AMP(  62)-AMP(  63)+AMP(  64)+AMP(  65)+AMP(  66)
     &             +AMP(  67)+AMP(  68)+AMP(  69)-AMP(  70)+AMP(  71)
     &             -AMP(  72)-AMP(  73)
      JAMP(   5) = +AMP(  25)+AMP(  26)-AMP(  27)-AMP(  28)+AMP(  29)
     &             -AMP(  30)+AMP(  31)-AMP(  32)+AMP(  33)+AMP(  34)
     &             -AMP(  35)-AMP(  36)+AMP(  42)-AMP(  43)-AMP(  44)
     &             -AMP(  45)-AMP(  46)+AMP(  47)-AMP(  48)+AMP(  49)
     &             -AMP(  50)+AMP(  51)+AMP(  52)+AMP(  53)-AMP(  69)
     &             +AMP(  70)-AMP(  71)+AMP(  72)+AMP(  73)-AMP(  77)
     &             +AMP(  78)+AMP(  79)-AMP(  80)-AMP(  81)+AMP(  82)
     &             +AMP(  83)+AMP(  84)
      JAMP(   6) = -AMP(  37)-AMP(  38)+AMP(  39)+AMP(  40)+AMP(  41)
     &             -AMP(  42)+AMP(  43)+AMP(  44)+AMP(  45)+AMP(  46)
     &             -AMP(  47)+AMP(  48)-AMP(  49)+AMP(  50)-AMP(  51)
     &             -AMP(  52)-AMP(  53)+AMP(  54)+AMP(  55)+AMP(  56)
     &             -AMP(  57)+AMP(  58)-AMP(  59)-AMP(  60)-AMP(  61)
     &             +AMP(  62)+AMP(  63)-AMP(  64)-AMP(  65)+AMP(  74)
     &             +AMP(  75)+AMP(  76)+AMP(  77)-AMP(  78)-AMP(  79)
     &             +AMP(  80)+AMP(  81)

c ----------------- GGFLO check -----------------
      do i=1,6
         mgJAMP(i)=JAMP(i)
c         print*,'JAMP(',i,')',JAMP(i)
      enddo
      do i=1,84
         MGamp2(NHEL(2),NHEL(4),NHEL(5),i)=AMP(i)
c         print*,'AMP(',i,')',MGamp2(i,NHEL(5))
      enddo
 
c      nr=1
c      MGamp2(NHEL(2),NHEL(4),NHEL(5),nr)=AMP(nr)
c      print*,'AMP(',nr,')',MGamp2(NHEL(2),NHEL(4),NHEL(5),nr)
c$$$      nr=53
c$$$      print*,'AMP(',nr,')',AMP(nr)
c$$$      nr=65
c$$$      print*,'AMP(',nr,')',AMP(nr)
c$$$
c------------------------------------------------

      MatrixuguggH2 = 0.0D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          MatrixuguggH2 =MatrixuguggH2+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo

      MGampsq2=MatrixuguggH2

C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       
       
*---------------------------------------------------------------------------     
      SUBROUTINE SMATRIXuguggh(PBAR,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u g -> u g g h  
C  
C Crossing   1 is u g -> u g g h  
      IMPLICIT NONE
C  
C CONSTANTS
C  
#include "genps.inc"
#include "ggfloMG.inc"    
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  32, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 PBAR(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T
      REAL*8 MATRIXuguggh
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_ampsuguggh/  amp2,       jamp2

      character*79         hel_buff
      common/to_helicityuguggh/  hel_buff

      REAL*8 POL(2)
      common/to_polarizationuguggh/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixuguggh/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
c      DATA multi_channel/.true./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /   84/          
      DATA jamp2(0) /   6/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) / 192/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
c      CALL SWITCHMOM(PBAR,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
c$$$      IF (multi_channel) THEN
c$$$          DO IHEL=1,NGRAPHS
c$$$              amp2(ihel)=0d0
c$$$              jamp2(ihel)=0d0
c$$$          ENDDO
c$$$          DO IHEL=1,int(jamp2(0))
c$$$              jamp2(ihel)=0d0
c$$$          ENDDO
c$$$      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=MATRIXuguggh(PBAR ,NHEL(1,IHEL),JC(1))            
c$$$               DO JJ=1,nincoming
c$$$                 IF(POL(JJ).NE.1d0.AND.
c$$$     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
c$$$                   T=T*ABS(POL(JJ))
c$$$                 ELSE IF(POL(JJ).NE.1d0)THEN
c$$$                   T=T*(2d0-ABS(POL(JJ)))
c$$$                 ENDIF
c$$$               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=MATRIXuguggh(PBAR ,NHEL(1,IHEL),JC(1))            
c$$$              DO JJ=1,nincoming
c$$$                IF(POL(JJ).NE.1d0.AND.
c$$$     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
c$$$                  T=T*ABS(POL(JJ))
c$$$                ELSE IF(POL(JJ).NE.1d0)THEN
c$$$                  T=T*(2d0-ABS(POL(JJ)))
c$$$                ENDIF
c$$$              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
c$$$      IF (MULTI_CHANNEL) THEN
c$$$          XTOT=0D0
c$$$          DO IHEL=1,MAPCONFIG(0)
c$$$              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
c$$$          ENDDO
c$$$          IF (XTOT.NE.0D0) THEN
c$$$              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
c$$$          ELSE
c$$$              ANS(IPROC)=0D0
c$$$          ENDIF
c$$$      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END


  
      REAL*8 FUNCTION MATRIXuguggh(PBAR,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u g -> u g g h  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  84,NEIGEN=  6) 
#include "genps.inc"
#include "ggfloMG.inc" 
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS= 109, NCOLOR=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 PBAR(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_ampsuguggh/  amp2,       jamp2
#include "VBFNLO/utilities/coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            9/                                       
      DATA (CF(i,1  ),i=1  ,6  ) /    64,    1,   -8,   -8,    1,   10/    
C               T[ 3, 1, 2, 4, 5]                                          
      DATA Denom(2  )/            9/                                       
      DATA (CF(i,2  ),i=1  ,6  ) /     1,   64,   -8,   10,    1,   -8/    
C               T[ 3, 1, 5, 2, 4]                                          
      DATA Denom(3  )/            9/                                       
      DATA (CF(i,3  ),i=1  ,6  ) /    -8,   -8,   64,    1,   10,    1/    
C               T[ 3, 1, 2, 5, 4]                                          
      DATA Denom(4  )/            9/                                       
      DATA (CF(i,4  ),i=1  ,6  ) /    -8,   10,    1,   64,   -8,    1/    
C               T[ 3, 1, 4, 2, 5]                                          
      DATA Denom(5  )/            9/                                       
      DATA (CF(i,5  ),i=1  ,6  ) /     1,    1,   10,   -8,   64,   -8/    
C               T[ 3, 1, 4, 5, 2]                                          
      DATA Denom(6  )/            9/                                       
      DATA (CF(i,6  ),i=1  ,6  ) /    10,   -8,    1,    1,   -8,   64/    
C               T[ 3, 1, 5, 4, 2]                                          
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(PBAR(0,1   ),ZERO ,NHEL(1   ),+1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(PBAR(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(PBAR(0,3   ),ZERO ,NHEL(3   ),+1*IC(3   ),W(1,3   ))        
      CALL VXXXXX(PBAR(0,4   ),ZERO ,NHEL(4   ),+1*IC(4   ),W(1,4   ))        
      CALL VXXXXX(PBAR(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))        
      CALL SXXXXX(PBAR(0,6   ),+1*IC(6   ),W(1,6   ))                         
      CALL FVIXXX(W(1,1   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL FVIXXX(W(1,7   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL JIOXXX(W(1,8   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL VVSHXX(W(1,2   ),W(1,9   ),W(1,6   ),GH ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL JIOXXX(W(1,7   ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,11  ))     
      CALL VVSHXX(W(1,4   ),W(1,11  ),W(1,6   ),GH ,AMP(2   ))             
      CALL FVOXXX(W(1,10  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL JIOXXX(W(1,1   ),W(1,12  ),GG ,ZERO    ,ZERO    ,W(1,13  ))     
      CALL VVSHXX(W(1,5   ),W(1,13  ),W(1,6   ),GH ,AMP(3   ))             
      CALL FVIXXX(W(1,1   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,14  ))     
      CALL JIOXXX(W(1,14  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL JVVXXX(W(1,5   ),W(1,15  ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL VVSHXX(W(1,2   ),W(1,16  ),W(1,6   ),GH ,AMP(4   ))             
      CALL JVVXXX(W(1,5   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,17  ))      
      CALL FVOXXX(W(1,3   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL JIOXXX(W(1,1   ),W(1,18  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL VVSHXX(W(1,4   ),W(1,19  ),W(1,6   ),GH ,AMP(5   ))             
      CALL JVVXXX(W(1,15  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,20  ))      
      CALL VVSHXX(W(1,5   ),W(1,20  ),W(1,6   ),GH ,AMP(6   ))             
      CALL VVVSXX(W(1,5   ),W(1,2   ),W(1,15  ),W(1,6   ),G ,GH ,          
     &     AMP(7   ))                                                      
      CALL VVSHXX(W(1,15  ),W(1,17  ),W(1,6   ),GH ,AMP(8   ))             
      CALL FVOXXX(W(1,3   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL JIOXXX(W(1,14  ),W(1,21  ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL VVSHXX(W(1,2   ),W(1,22  ),W(1,6   ),GH ,AMP(9   ))             
      CALL FVOXXX(W(1,21  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL JIOXXX(W(1,1   ),W(1,23  ),GG ,ZERO    ,ZERO    ,W(1,24  ))     
      CALL VVSHXX(W(1,4   ),W(1,24  ),W(1,6   ),GH ,AMP(10  ))             
      CALL FVIXXX(W(1,14  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,25  ))     
      CALL JIOXXX(W(1,25  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,26  ))     
      CALL VVSHXX(W(1,5   ),W(1,26  ),W(1,6   ),GH ,AMP(11  ))             
      CALL JVVXXX(W(1,5   ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,27  ))      
      CALL FVIXXX(W(1,1   ),W(1,27  ),GG ,ZERO    ,ZERO    ,W(1,28  ))     
      CALL JIOXXX(W(1,28  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,29  ))     
      CALL VVSHXX(W(1,2   ),W(1,29  ),W(1,6   ),GH ,AMP(12  ))             
      CALL JIOXXX(W(1,1   ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,30  ))     
      CALL JVVXXX(W(1,5   ),W(1,30  ),G ,ZERO    ,ZERO    ,W(1,31  ))      
      CALL VVSHXX(W(1,4   ),W(1,31  ),W(1,6   ),GH ,AMP(13  ))             
      CALL JVVXXX(W(1,30  ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,32  ))      
      CALL VVSHXX(W(1,5   ),W(1,32  ),W(1,6   ),GH ,AMP(14  ))             
      CALL VVVSXX(W(1,5   ),W(1,4   ),W(1,30  ),W(1,6   ),G ,GH ,          
     &     AMP(15  ))                                                      
      CALL VVSHXX(W(1,30  ),W(1,27  ),W(1,6   ),GH ,AMP(16  ))             
      CALL FVIXXX(W(1,14  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,33  ))     
      CALL JIOXXX(W(1,33  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,34  ))     
      CALL VVSHXX(W(1,2   ),W(1,34  ),W(1,6   ),GH ,AMP(17  ))             
      CALL FVOXXX(W(1,10  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,35  ))     
      CALL JIOXXX(W(1,1   ),W(1,35  ),GG ,ZERO    ,ZERO    ,W(1,36  ))     
      CALL VVSHXX(W(1,4   ),W(1,36  ),W(1,6   ),GH ,AMP(18  ))             
      CALL JIOXXX(W(1,14  ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,37  ))     
      CALL VVSHXX(W(1,5   ),W(1,37  ),W(1,6   ),GH ,AMP(19  ))             
      CALL JIOXXX(W(1,7   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,38  ))     
      CALL JVVXXX(W(1,4   ),W(1,38  ),G ,ZERO    ,ZERO    ,W(1,39  ))      
      CALL VVSHXX(W(1,2   ),W(1,39  ),W(1,6   ),GH ,AMP(20  ))             
      CALL JVVXXX(W(1,38  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,40  ))      
      CALL VVSHXX(W(1,4   ),W(1,40  ),W(1,6   ),GH ,AMP(21  ))             
      CALL JVVXXX(W(1,4   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,41  ))      
      CALL FVOXXX(W(1,3   ),W(1,41  ),GG ,ZERO    ,ZERO    ,W(1,42  ))     
      CALL JIOXXX(W(1,1   ),W(1,42  ),GG ,ZERO    ,ZERO    ,W(1,43  ))     
      CALL VVSHXX(W(1,5   ),W(1,43  ),W(1,6   ),GH ,AMP(22  ))             
      CALL VVVSXX(W(1,4   ),W(1,2   ),W(1,38  ),W(1,6   ),G ,GH ,          
     &     AMP(23  ))                                                      
      CALL VVSHXX(W(1,38  ),W(1,41  ),W(1,6   ),GH ,AMP(24  ))             
      CALL JIOXXX(W(1,1   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,44  ))     
      CALL JVVXXX(W(1,4   ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,45  ))      
      CALL JVVXXX(W(1,5   ),W(1,45  ),G ,ZERO    ,ZERO    ,W(1,46  ))      
      CALL VVSHXX(W(1,2   ),W(1,46  ),W(1,6   ),GH ,AMP(25  ))             
      CALL UVVAXX(W(1,4   ),W(1,44  ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,47  ))                                                      
      CALL JVTAXX(W(1,5   ),W(1,47  ),G ,ZERO    ,ZERO    ,W(1,48  ))      
      CALL VVSHXX(W(1,2   ),W(1,48  ),W(1,6   ),GH ,AMP(26  ))             
      CALL JVVXXX(W(1,44  ),W(1,17  ),G ,ZERO    ,ZERO    ,W(1,49  ))      
      CALL VVSHXX(W(1,4   ),W(1,49  ),W(1,6   ),GH ,AMP(27  ))             
      CALL UVVAXX(W(1,5   ),W(1,2   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,50  ))                                                      
      CALL JVTAXX(W(1,44  ),W(1,50  ),G ,ZERO    ,ZERO    ,W(1,51  ))      
      CALL VVSHXX(W(1,4   ),W(1,51  ),W(1,6   ),GH ,AMP(28  ))             
      CALL JVVXXX(W(1,45  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,52  ))      
      CALL VVSHXX(W(1,5   ),W(1,52  ),W(1,6   ),GH ,AMP(29  ))             
      CALL JVTAXX(W(1,2   ),W(1,47  ),G ,ZERO    ,ZERO    ,W(1,53  ))      
      CALL VVSHXX(W(1,5   ),W(1,53  ),W(1,6   ),GH ,AMP(30  ))             
      CALL VVVSXX(W(1,4   ),W(1,17  ),W(1,44  ),W(1,6   ),G ,GH ,          
     &     AMP(31  ))                                                      
      CALL VVVSXX(W(1,5   ),W(1,2   ),W(1,45  ),W(1,6   ),G ,GH ,          
     &     AMP(32  ))                                                      
      CALL JVVXXX(W(1,4   ),W(1,17  ),G ,ZERO    ,ZERO    ,W(1,54  ))      
      CALL VVSHXX(W(1,44  ),W(1,54  ),W(1,6   ),GH ,AMP(33  ))             
      CALL JVTAXX(W(1,4   ),W(1,50  ),G ,ZERO    ,ZERO    ,W(1,55  ))      
      CALL VVSHXX(W(1,44  ),W(1,55  ),W(1,6   ),GH ,AMP(34  ))             
      CALL VVSHXX(W(1,45  ),W(1,17  ),W(1,6   ),GH ,AMP(35  ))             
      CALL TTSAXX(W(1,47  ),W(1,50  ),W(1,6   ),GH ,AMP(36  ))             
      CALL JIOXXX(W(1,1   ),W(1,21  ),GG ,ZERO    ,ZERO    ,W(1,56  ))     
      CALL JVVXXX(W(1,4   ),W(1,56  ),G ,ZERO    ,ZERO    ,W(1,57  ))      
      CALL VVSHXX(W(1,2   ),W(1,57  ),W(1,6   ),GH ,AMP(37  ))             
      CALL JVVXXX(W(1,56  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,58  ))      
      CALL VVSHXX(W(1,4   ),W(1,58  ),W(1,6   ),GH ,AMP(38  ))             
      CALL FVIXXX(W(1,1   ),W(1,41  ),GG ,ZERO    ,ZERO    ,W(1,59  ))     
      CALL JIOXXX(W(1,59  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,60  ))     
      CALL VVSHXX(W(1,5   ),W(1,60  ),W(1,6   ),GH ,AMP(39  ))             
      CALL VVVSXX(W(1,4   ),W(1,2   ),W(1,56  ),W(1,6   ),G ,GH ,          
     &     AMP(40  ))                                                      
      CALL VVSHXX(W(1,56  ),W(1,41  ),W(1,6   ),GH ,AMP(41  ))             
      CALL JVVXXX(W(1,27  ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,61  ))      
      CALL VVSHXX(W(1,2   ),W(1,61  ),W(1,6   ),GH ,AMP(42  ))             
      CALL UVVAXX(W(1,5   ),W(1,4   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,62  ))                                                      
      CALL JVTAXX(W(1,44  ),W(1,62  ),G ,ZERO    ,ZERO    ,W(1,63  ))      
      CALL VVSHXX(W(1,2   ),W(1,63  ),W(1,6   ),GH ,AMP(43  ))             
      CALL JVVXXX(W(1,44  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,64  ))      
      CALL JVVXXX(W(1,5   ),W(1,64  ),G ,ZERO    ,ZERO    ,W(1,65  ))      
      CALL VVSHXX(W(1,4   ),W(1,65  ),W(1,6   ),GH ,AMP(44  ))             
      CALL UVVAXX(W(1,44  ),W(1,2   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,66  ))                                                      
      CALL JVTAXX(W(1,5   ),W(1,66  ),G ,ZERO    ,ZERO    ,W(1,67  ))      
      CALL VVSHXX(W(1,4   ),W(1,67  ),W(1,6   ),GH ,AMP(45  ))             
      CALL JVVXXX(W(1,64  ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,68  ))      
      CALL VVSHXX(W(1,5   ),W(1,68  ),W(1,6   ),GH ,AMP(46  ))             
      CALL JVTAXX(W(1,4   ),W(1,66  ),G ,ZERO    ,ZERO    ,W(1,69  ))      
      CALL VVSHXX(W(1,5   ),W(1,69  ),W(1,6   ),GH ,AMP(47  ))             
      CALL VVVSXX(W(1,27  ),W(1,2   ),W(1,44  ),W(1,6   ),G ,GH ,          
     &     AMP(48  ))                                                      
      CALL VVVSXX(W(1,5   ),W(1,4   ),W(1,64  ),W(1,6   ),G ,GH ,          
     &     AMP(49  ))                                                      
      CALL JVVXXX(W(1,27  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,70  ))      
      CALL VVSHXX(W(1,44  ),W(1,70  ),W(1,6   ),GH ,AMP(50  ))             
      CALL JVTAXX(W(1,2   ),W(1,62  ),G ,ZERO    ,ZERO    ,W(1,71  ))      
      CALL VVSHXX(W(1,44  ),W(1,71  ),W(1,6   ),GH ,AMP(51  ))             
      CALL VVSHXX(W(1,64  ),W(1,27  ),W(1,6   ),GH ,AMP(52  ))             
      CALL TTSAXX(W(1,66  ),W(1,62  ),W(1,6   ),GH ,AMP(53  ))             
      CALL JVVXXX(W(1,5   ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,72  ))      
      CALL JVVXXX(W(1,4   ),W(1,72  ),G ,ZERO    ,ZERO    ,W(1,73  ))      
      CALL VVSHXX(W(1,2   ),W(1,73  ),W(1,6   ),GH ,AMP(54  ))             
      CALL UVVAXX(W(1,5   ),W(1,44  ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,74  ))                                                      
      CALL JVTAXX(W(1,4   ),W(1,74  ),G ,ZERO    ,ZERO    ,W(1,75  ))      
      CALL VVSHXX(W(1,2   ),W(1,75  ),W(1,6   ),GH ,AMP(55  ))             
      CALL JVVXXX(W(1,72  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,76  ))      
      CALL VVSHXX(W(1,4   ),W(1,76  ),W(1,6   ),GH ,AMP(56  ))             
      CALL JVTAXX(W(1,2   ),W(1,74  ),G ,ZERO    ,ZERO    ,W(1,77  ))      
      CALL VVSHXX(W(1,4   ),W(1,77  ),W(1,6   ),GH ,AMP(57  ))             
      CALL JVVXXX(W(1,41  ),W(1,44  ),G ,ZERO    ,ZERO    ,W(1,78  ))      
      CALL VVSHXX(W(1,5   ),W(1,78  ),W(1,6   ),GH ,AMP(58  ))             
      CALL UVVAXX(W(1,4   ),W(1,2   ),G ,ZERO    ,ZERO    ,ZERO    ,       
     &     W(1,79  ))                                                      
      CALL JVTAXX(W(1,44  ),W(1,79  ),G ,ZERO    ,ZERO    ,W(1,80  ))      
      CALL VVSHXX(W(1,5   ),W(1,80  ),W(1,6   ),GH ,AMP(59  ))             
      CALL VVVSXX(W(1,4   ),W(1,2   ),W(1,72  ),W(1,6   ),G ,GH ,          
     &     AMP(60  ))                                                      
      CALL VVVSXX(W(1,5   ),W(1,44  ),W(1,41  ),W(1,6   ),G ,GH ,          
     &     AMP(61  ))                                                      
      CALL JVVXXX(W(1,5   ),W(1,41  ),G ,ZERO    ,ZERO    ,W(1,81  ))      
      CALL VVSHXX(W(1,44  ),W(1,81  ),W(1,6   ),GH ,AMP(62  ))             
      CALL JVTAXX(W(1,5   ),W(1,79  ),G ,ZERO    ,ZERO    ,W(1,82  ))      
      CALL VVSHXX(W(1,44  ),W(1,82  ),W(1,6   ),GH ,AMP(63  ))             
      CALL VVSHXX(W(1,41  ),W(1,72  ),W(1,6   ),GH ,AMP(64  ))             
      CALL TTSAXX(W(1,79  ),W(1,74  ),W(1,6   ),GH ,AMP(65  ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,83  ))     
      CALL JIOXXX(W(1,7   ),W(1,83  ),GG ,ZERO    ,ZERO    ,W(1,84  ))     
      CALL VVSHXX(W(1,2   ),W(1,84  ),W(1,6   ),GH ,AMP(66  ))             
      CALL FVIXXX(W(1,7   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,85  ))     
      CALL JIOXXX(W(1,85  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,86  ))     
      CALL VVSHXX(W(1,4   ),W(1,86  ),W(1,6   ),GH ,AMP(67  ))             
      CALL FVOXXX(W(1,83  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,87  ))     
      CALL JIOXXX(W(1,1   ),W(1,87  ),GG ,ZERO    ,ZERO    ,W(1,88  ))     
      CALL VVSHXX(W(1,5   ),W(1,88  ),W(1,6   ),GH ,AMP(68  ))             
      CALL JIOXXX(W(1,1   ),W(1,83  ),GG ,ZERO    ,ZERO    ,W(1,89  ))     
      CALL JVVXXX(W(1,5   ),W(1,89  ),G ,ZERO    ,ZERO    ,W(1,90  ))      
      CALL VVSHXX(W(1,2   ),W(1,90  ),W(1,6   ),GH ,AMP(69  ))             
      CALL FVIXXX(W(1,1   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,91  ))     
      CALL JIOXXX(W(1,91  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,92  ))     
      CALL VVSHXX(W(1,4   ),W(1,92  ),W(1,6   ),GH ,AMP(70  ))             
      CALL JVVXXX(W(1,89  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,93  ))      
      CALL VVSHXX(W(1,5   ),W(1,93  ),W(1,6   ),GH ,AMP(71  ))             
      CALL VVVSXX(W(1,5   ),W(1,2   ),W(1,89  ),W(1,6   ),G ,GH ,          
     &     AMP(72  ))                                                      
      CALL VVSHXX(W(1,89  ),W(1,17  ),W(1,6   ),GH ,AMP(73  ))             
      CALL FVOXXX(W(1,21  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,94  ))     
      CALL JIOXXX(W(1,1   ),W(1,94  ),GG ,ZERO    ,ZERO    ,W(1,95  ))     
      CALL VVSHXX(W(1,2   ),W(1,95  ),W(1,6   ),GH ,AMP(74  ))             
      CALL FVIXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,96  ))     
      CALL JIOXXX(W(1,96  ),W(1,21  ),GG ,ZERO    ,ZERO    ,W(1,97  ))     
      CALL VVSHXX(W(1,4   ),W(1,97  ),W(1,6   ),GH ,AMP(75  ))             
      CALL FVIXXX(W(1,96  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,98  ))     
      CALL JIOXXX(W(1,98  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,99  ))     
      CALL VVSHXX(W(1,5   ),W(1,99  ),W(1,6   ),GH ,AMP(76  ))             
      CALL FVOXXX(W(1,3   ),W(1,27  ),GG ,ZERO    ,ZERO    ,W(1,100 ))     
      CALL JIOXXX(W(1,1   ),W(1,100 ),GG ,ZERO    ,ZERO    ,W(1,101 ))     
      CALL VVSHXX(W(1,2   ),W(1,101 ),W(1,6   ),GH ,AMP(77  ))             
      CALL JIOXXX(W(1,96  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,102 ))     
      CALL JVVXXX(W(1,5   ),W(1,102 ),G ,ZERO    ,ZERO    ,W(1,103 ))      
      CALL VVSHXX(W(1,4   ),W(1,103 ),W(1,6   ),GH ,AMP(78  ))             
      CALL JVVXXX(W(1,102 ),W(1,4   ),G ,ZERO    ,ZERO    ,W(1,104 ))      
      CALL VVSHXX(W(1,5   ),W(1,104 ),W(1,6   ),GH ,AMP(79  ))             
      CALL VVVSXX(W(1,5   ),W(1,4   ),W(1,102 ),W(1,6   ),G ,GH ,          
     &     AMP(80  ))                                                      
      CALL VVSHXX(W(1,102 ),W(1,27  ),W(1,6   ),GH ,AMP(81  ))             
      CALL FVOXXX(W(1,83  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,105 ))     
      CALL JIOXXX(W(1,1   ),W(1,105 ),GG ,ZERO    ,ZERO    ,W(1,106 ))     
      CALL VVSHXX(W(1,2   ),W(1,106 ),W(1,6   ),GH ,AMP(82  ))             
      CALL FVIXXX(W(1,96  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,107 ))     
      CALL JIOXXX(W(1,107 ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,108 ))     
      CALL VVSHXX(W(1,4   ),W(1,108 ),W(1,6   ),GH ,AMP(83  ))             
      CALL JIOXXX(W(1,96  ),W(1,83  ),GG ,ZERO    ,ZERO    ,W(1,109 ))     
      CALL VVSHXX(W(1,5   ),W(1,109 ),W(1,6   ),GH ,AMP(84  ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)+AMP(   3)-AMP(  12)+AMP(  13)
     &             +AMP(  14)-AMP(  15)-AMP(  16)+AMP(  20)+AMP(  21)
     &             -AMP(  22)-AMP(  23)-AMP(  24)-AMP(  42)+AMP(  43)
     &             +AMP(  44)+AMP(  45)+AMP(  46)-AMP(  47)+AMP(  48)
     &             -AMP(  49)+AMP(  50)-AMP(  51)-AMP(  52)-AMP(  53)
     &             +AMP(  54)+AMP(  55)+AMP(  56)-AMP(  57)+AMP(  58)
     &             -AMP(  59)-AMP(  60)-AMP(  61)+AMP(  62)+AMP(  63)
     &             -AMP(  64)-AMP(  65)
      JAMP(   2) = -AMP(   4)+AMP(   5)-AMP(   6)+AMP(   7)+AMP(   8)
     &             +AMP(   9)+AMP(  10)+AMP(  11)-AMP(  25)-AMP(  26)
     &             +AMP(  27)+AMP(  28)-AMP(  29)+AMP(  30)-AMP(  31)
     &             +AMP(  32)-AMP(  33)-AMP(  34)+AMP(  35)+AMP(  36)
     &             +AMP(  37)+AMP(  38)-AMP(  39)-AMP(  40)-AMP(  41)
     &             -AMP(  54)-AMP(  55)-AMP(  56)+AMP(  57)-AMP(  58)
     &             +AMP(  59)+AMP(  60)+AMP(  61)-AMP(  62)-AMP(  63)
     &             +AMP(  64)+AMP(  65)
      JAMP(   3) = +AMP(   4)-AMP(   5)+AMP(   6)-AMP(   7)-AMP(   8)
     &             +AMP(  12)-AMP(  13)-AMP(  14)+AMP(  15)+AMP(  16)
     &             +AMP(  17)+AMP(  18)+AMP(  19)+AMP(  25)+AMP(  26)
     &             -AMP(  27)-AMP(  28)+AMP(  29)-AMP(  30)+AMP(  31)
     &             -AMP(  32)+AMP(  33)+AMP(  34)-AMP(  35)-AMP(  36)
     &             +AMP(  42)-AMP(  43)-AMP(  44)-AMP(  45)-AMP(  46)
     &             +AMP(  47)-AMP(  48)+AMP(  49)-AMP(  50)+AMP(  51)
     &             +AMP(  52)+AMP(  53)
      JAMP(   4) = -AMP(  20)-AMP(  21)+AMP(  22)+AMP(  23)+AMP(  24)
     &             -AMP(  25)-AMP(  26)+AMP(  27)+AMP(  28)-AMP(  29)
     &             +AMP(  30)-AMP(  31)+AMP(  32)-AMP(  33)-AMP(  34)
     &             +AMP(  35)+AMP(  36)-AMP(  54)-AMP(  55)-AMP(  56)
     &             +AMP(  57)-AMP(  58)+AMP(  59)+AMP(  60)+AMP(  61)
     &             -AMP(  62)-AMP(  63)+AMP(  64)+AMP(  65)+AMP(  66)
     &             +AMP(  67)+AMP(  68)+AMP(  69)-AMP(  70)+AMP(  71)
     &             -AMP(  72)-AMP(  73)
      JAMP(   5) = +AMP(  25)+AMP(  26)-AMP(  27)-AMP(  28)+AMP(  29)
     &             -AMP(  30)+AMP(  31)-AMP(  32)+AMP(  33)+AMP(  34)
     &             -AMP(  35)-AMP(  36)+AMP(  42)-AMP(  43)-AMP(  44)
     &             -AMP(  45)-AMP(  46)+AMP(  47)-AMP(  48)+AMP(  49)
     &             -AMP(  50)+AMP(  51)+AMP(  52)+AMP(  53)-AMP(  69)
     &             +AMP(  70)-AMP(  71)+AMP(  72)+AMP(  73)-AMP(  77)
     &             +AMP(  78)+AMP(  79)-AMP(  80)-AMP(  81)+AMP(  82)
     &             +AMP(  83)+AMP(  84)
      JAMP(   6) = -AMP(  37)-AMP(  38)+AMP(  39)+AMP(  40)+AMP(  41)
     &             -AMP(  42)+AMP(  43)+AMP(  44)+AMP(  45)+AMP(  46)
     &             -AMP(  47)+AMP(  48)-AMP(  49)+AMP(  50)-AMP(  51)
     &             -AMP(  52)-AMP(  53)+AMP(  54)+AMP(  55)+AMP(  56)
     &             -AMP(  57)+AMP(  58)-AMP(  59)-AMP(  60)-AMP(  61)
     &             +AMP(  62)+AMP(  63)-AMP(  64)-AMP(  65)+AMP(  74)
     &             +AMP(  75)+AMP(  76)+AMP(  77)-AMP(  78)-AMP(  79)
     &             +AMP(  80)+AMP(  81)
      MATRIXuguggh = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          MATRIXuguggh =MATRIXuguggh+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       
       
